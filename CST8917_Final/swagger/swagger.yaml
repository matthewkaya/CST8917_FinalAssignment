openapi: 3.0.1
info:
  title: Serverless Image Processing API
  description: API documentation for Azure Functions serverless image processing app.
  version: "1.5"

servers:
  - url: https://miniature-disco-x467wrg9gvxf6v6g-7071.app.github.dev/api
    description: GitHub Codespaces Local Environment

paths:
  /ping:
    get:
      summary: Health Check
      responses:
        '200':
          description: Server is running

  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                  description: Optional phone number
              required:
                - firstName
                - lastName
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing required fields

    get:
      summary: Get user details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

    put:
      summary: Update user information
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                  description: Optional phone number
      responses:
        '200':
          description: User updated successfully
        '400':
          description: No update data provided
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

    patch:
      summary: Update user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - email
                - oldPassword
                - newPassword
      responses:
        '200':
          description: Password updated successfully
        '400':
          description: Missing required fields
        '401':
          description: Old password does not match
        '404':
          description: User not found

    delete:
      summary: Delete a user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: User not deleted
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

  /device:
    post:
      summary: Register a new device
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                deviceName:
                  type: string
                  description: Optional device name
              required:
                - deviceId
      responses:
        '201':
          description: Device registered successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found
        '500':
          description: Failed to register device in IoT Hub

    get:
      summary: Get all devices for the authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Devices retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    deviceId:
                      type: string
                    deviceName:
                      type: string
                    telemetryData:
                      type: array
                      items:
                        type: object
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

    put:
      summary: Update a device for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                update:
                  type: object
                  description: Fields to update
              required:
                - deviceId
                - update
      responses:
        '200':
          description: Device updated successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Device not found

    delete:
      summary: Delete a device for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
              required:
                - deviceId
      responses:
        '200':
          description: Device deleted successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Device not found
        '500':
          description: Failed to delete device from IoT Hub

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
        expiryDate:
          type: string
          format: date-time

    User:
      type: object
      properties:
        userId:
          type: string
          description: MongoDB shard key (userId)
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
          description: Optional phone number
        authToken:
          $ref: '#/components/schemas/AuthToken'
        Devices:
          type: array
          items:
            type: object
            description: List of devices associated with the user
            
  SasAccessInfo:
    type: object
    properties:
      sasUrl:
        type: string
        description: |
            A time-limited secure URL (SAS token) for accessing the resized image without making the blob container public.
            This link usually expires after 1 hour and is auto-generated for the user after image resizing.
