openapi: 3.0.1
info:
  title: Serverless Image Processing API
  description: API documentation for Azure Functions serverless image processing app.
  version: "1.5"

servers:
  - url: https://miniature-disco-x467wrg9gvxf6v6g-7071.app.github.dev/api
    description: GitHub Codespaces Local Environment

tags:
  - name: User
    description: Operations related to user management
  - name: Admin
    description: Operations related to admin user management
  - name: Telemetry
    description: Operations related to telemetry data
  - name: Device
    description: Operations related to device management
  - name: Authentication
    description: Operations related to user authentication
  - name: Conditions
    description: Operations related to condition management

paths:
  /ping:
    get:
      summary: Health Check
      tags:
        - General
      responses:
        '200':
          description: Server is running

  /user/login:
    post:
      summary: User login
      tags:
        - Authentication
      description: Authenticate a user and return a new JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                password:
                  type: string
                  description: User's password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing required fields or invalid data
        '401':
          description: Invalid email or password
        '404':
          description: User not found
        '500':
          description: Failed to update user token

  /user:
    post:
      summary: Create a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                  description: Optional phone number
              required:
                - firstName
                - lastName
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing required fields

    get:
      summary: Get user details
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

    put:
      summary: Update user information
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                  description: Optional phone number
      responses:
        '200':
          description: User updated successfully
        '400':
          description: No update data provided
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

    patch:
      summary: Update user password
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                oldPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - email
                - oldPassword
                - newPassword
      responses:
        '200':
          description: Password updated successfully
        '400':
          description: Missing required fields
        '401':
          description: Old password does not match
        '404':
          description: User not found

    delete:
      summary: Delete a user
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: User not deleted
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found

  /user/admin:
    post:
      summary: Create a new admin user
      tags:
        - Admin
      description: Create a new admin user with elevated privileges.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                  description: Optional phone number
              required:
                - firstName
                - lastName
                - email
                - password
      responses:
        '201':
          description: Admin user created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Missing required fields
        '500':
          description: Internal server error

  /users:
    get:
      summary: Get all users (Admin only)
      tags:
        - Admin
      description: Retrieve a list of all users. Only accessible by admin users. Supports filtering by user details, device details, and telemetry data.
      security:
        - bearerAuth: []
      parameters:
        - name: firstName
          in: query
          description: Filter by user's first name
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          description: Filter by user's last name
          required: false
          schema:
            type: string
        - name: email
          in: query
          description: Filter by user's email
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: Filter by user's phone number
          required: false
          schema:
            type: string
        - name: userType
          in: query
          description: Filter by user type (e.g., user, admin)
          required: false
          schema:
            type: string
            enum:
              - user
              - admin
        - name: deviceId
          in: query
          description: Filter by device ID
          required: false
          schema:
            type: string
        - name: deviceName
          in: query
          description: Filter by device name
          required: false
          schema:
            type: string
        - name: sensorType
          in: query
          description: Filter by sensor type (e.g., Temperature, Humidity)
          required: false
          schema:
            type: string
        - name: telemetryDate
          in: query
          description: Filter telemetry data by event date
          required: false
          schema:
            type: string
            format: date-time
        - name: valueType
          in: query
          description: Filter telemetry data by value type
          required: false
          schema:
            type: string
        - name: valueMin
          in: query
          description: Filter telemetry data by minimum value
          required: false
          schema:
            type: number
        - name: valueMax
          in: query
          description: Filter telemetry data by maximum value
          required: false
          schema:
            type: number
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    userId:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                    Devices:
                      type: array
                      items:
                        type: object
                        properties:
                          deviceId:
                            type: string
                          deviceName:
                            type: string
                          telemetryData:
                            type: array
                            items:
                              type: object
                              properties:
                                eventId:
                                  type: string
                                event_date:
                                  type: string
                                  format: date-time
                                values:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      valueType:
                                        type: string
                                      value:
                                        type: number
                    type:
                      type: string
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (only admins can access this endpoint)
        '500':
          description: Internal server error

  /device:
    post:
      summary: Register a new device
      tags:
        - Device
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                  description: Unique identifier for the device
                deviceName:
                  type: string
                  description: Name of the device
                sensorType:
                  type: string
                  description: Type of sensor (e.g., Temperature, Humidity)
                location:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the location
                    longitude:
                      type: string
                      description: Longitude of the location
                    latitude:
                      type: string
                      description: Latitude of the location
              required:
                - deviceId
                - deviceName
                - sensorType
                - location
      responses:
        '201':
          description: Device registered successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: User not found
        '409':
          description: Device already exists in IoT Hub
        '500':
          description: Failed to register device in IoT Hub

    put:
      summary: Update a device for the authenticated user
      tags:
        - Device      
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                  description: Unique identifier for the device
                update:
                  type: object
                  description: Fields to update
                  properties:
                    deviceName:
                      type: string
                      description: Updated name of the device
                    sensorType:
                      type: string
                      description: Updated type of sensor
                    location:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Updated name of the location
                        longitude:
                          type: string
                          description: Updated longitude of the location
                        latitude:
                          type: string
                          description: Updated latitude of the location
              required:
                - deviceId
                - update
      responses:
        '200':
          description: Device updated successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Device not found

    delete:
      summary: Delete a device for the authenticated user
      tags:
        - Device      
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                  description: Unique identifier for the device
              required:
                - deviceId
      responses:
        '200':
          description: Device deleted successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Device not found
        '500':
          description: Failed to delete device from IoT Hub

  /devices:
    get:
      summary: Get devices or a specific device for the authenticated user
      tags:
        - Device
      description: Retrieve a list of devices or a specific device for the authenticated user. Supports filtering by device details and telemetry data.
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: query
          description: Filter by device ID. If provided, only the specific device will be returned.
          required: false
          schema:
            type: string
        - name: deviceName
          in: query
          description: Filter by device name
          required: false
          schema:
            type: string
        - name: telemetryDate
          in: query
          description: Filter telemetry data by event date
          required: false
          schema:
            type: string
            format: date-time
        - name: sensorType
          in: query
          description: Filter telemetry data by sensor type (e.g., temperature, humidity)
          required: false
          schema:
            type: string
        - name: valueType
          in: query
          description: Filter telemetry data by value type
          required: false
          schema:
            type: string
        - name: valueMin
          in: query
          description: Filter telemetry data by minimum value
          required: false
          schema:
            type: number
        - name: valueMax
          in: query
          description: Filter telemetry data by maximum value
          required: false
          schema:
            type: number
      responses:
        '200':
          description: List of devices or a specific device retrieved successfully
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      type: object
                      properties:
                        deviceId:
                          type: string
                        deviceName:
                          type: string
                        telemetryData:
                          type: array
                          items:
                            type: object
                            properties:
                              eventId:
                                type: string
                              event_date:
                                type: string
                                format: date-time
                              values:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    valueType:
                                      type: string
                                    value:
                                      type: number
                  - type: object
                    properties:
                      deviceId:
                        type: string
                      deviceName:
                        type: string
                      telemetryData:
                        type: array
                        items:
                          type: object
                          properties:
                            eventId:
                              type: string
                            event_date:
                              type: string
                              format: date-time
                            values:
                              type: array
                              items:
                                type: object
                                properties:
                                  valueType:
                                    type: string
                                  value:
                                    type: number
        '401':
          description: Unauthorized (missing or invalid token)
        '404':
          description: Device not found
        '500':
          description: Internal server error

  /telemetry:
    post:
      summary: Add telemetry data
      tags:
        - Telemetry
      description: Add telemetry data for a specific device. This endpoint allows uploading an image along with telemetry data.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                  description: Unique identifier for the device
                values:
                  type: array
                  description: List of telemetry values
                  items:
                    type: object
                    properties:
                      valueType:
                        type: string
                        description: Type of the value (e.g., Temperature, Humidity)
                      value:
                        type: number
                        description: Value of the telemetry data
                image:
                  type: string
                  format: binary
                  description: Image file to upload (optional)
              required:
                - deviceId
                - values
      responses:
        '201':
          description: Telemetry data added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Missing required fields or invalid data
        '404':
          description: Device not found in CosmosDB
        '500':
          description: Failed to process telemetry data

    get:
      summary: Get telemetry data
      tags:
        - Telemetry
      description: Retrieve telemetry data for the authenticated user's devices.
      security:
        - bearerAuth: []
      parameters:
        - name: eventId
          in: query
          schema:
            type: string
          description: Unique identifier for the telemetry event
        - name: deviceId
          in: query
          schema:
            type: string
          description: Unique identifier for the device
        - name: sensorType
          in: query
          schema:
            type: string
          description: Type of sensor (e.g., Temperature, Humidity)
        - name: eventDate
          in: query
          schema:
            type: string
            format: date-time
          description: Specific date of the telemetry event
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
          description: Start date for the telemetry data range
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
          description: End date for the telemetry data range
        - name: values
          in: query
          schema:
            type: array
            items:
              type: object
              properties:
                valueType:
                  type: string
                  description: Type of the value (e.g., Temperature, Humidity)
                minValue:
                  type: number
                  description: Minimum value for the range
                maxValue:
                  type: number
                  description: Maximum value for the range
          description: Filters for telemetry values
      responses:
        '200':
          description: Telemetry data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'
        '400':
          description: Invalid query parameters
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: No telemetry data found

    delete:
      summary: Delete telemetry data
      tags:
        - Telemetry      
      description: Delete telemetry data for a specific event. Only the authenticated user's data can be deleted.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  description: Unique identifier for the telemetry event
              required:
                - eventId
      responses:
        '200':
          description: Telemetry data deleted successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Telemetry data not found or access denied

  /conditions:
    get:
      summary: Get conditions
      tags:
        - Conditions
      description: Retrieve conditions for the authenticated user. Optionally filter by `deviceId`.
      security:
        - bearerAuth: []
      parameters:
        - name: deviceId
          in: query
          description: Filter conditions by device ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of conditions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    conditionId:
                      type: string
                    userId:
                      type: string
                    deviceId:
                      type: string
                    valueType:
                      type: string
                    minValue:
                      type: number
                    maxValue:
                      type: number
                    exactValue:
                      type: number
                    unit:
                      type: string
        '401':
          description: Unauthorized (JWT token missing or invalid)

    post:
      summary: Create one or multiple conditions
      tags:
        - Conditions
      description: >
        Create one or multiple conditions for the authenticated user. If `deviceId` is provided, it will be validated against the user's devices.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    deviceId:
                      type: string
                      description: ID of the device associated with the condition (optional)
                    valueType:
                      type: string
                      description: Type of the value (e.g., temperature, light)
                    minValue:
                      type: number
                      description: Minimum value for the condition (optional)
                    maxValue:
                      type: number
                      description: Maximum value for the condition (optional)
                    exactValue:
                      type: number
                      description: Exact value for the condition (optional)
                    unit:
                      type: string
                      description: Unit of the value (e.g., Celsius, Lux) (optional)
                  required:
                    - valueType
                - type: array
                  items:
                    type: object
                    properties:
                      deviceId:
                        type: string
                        description: ID of the device associated with the condition (optional)
                      valueType:
                        type: string
                        description: Type of the value (e.g., temperature, light)
                      minValue:
                        type: number
                        description: Minimum value for the condition (optional)
                      maxValue:
                        type: number
                        description: Maximum value for the condition (optional)
                      exactValue:
                        type: number
                        description: Exact value for the condition (optional)
                      unit:
                        type: string
                        description: Unit of the value (e.g., Celsius, Lux) (optional)
                    required:
                      - valueType
      responses:
        '201':
          description: Conditions created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_conditions:
                    type: array
                    items:
                      type: object
                      properties:
                        conditionId:
                          type: string
                        userId:
                          type: string
                        deviceId:
                          type: string
                        valueType:
                          type: string
                        minValue:
                          type: number
                        maxValue:
                          type: number
                        exactValue:
                          type: number
                        unit:
                          type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          type: string
                        condition:
                          type: object
        '400':
          description: Invalid request body or validation errors
        '401':
          description: Unauthorized (JWT token missing or invalid)

    put:
      summary: Update a condition
      tags:
        - Conditions
      description: Update an existing condition for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conditionId:
                  type: string
                  description: ID of the condition to update
                valueType:
                  type: string
                  description: Updated type of the value (optional)
                minValue:
                  type: number
                  description: Updated minimum value for the condition (optional)
                maxValue:
                  type: number
                  description: Updated maximum value for the condition (optional)
                exactValue:
                  type: number
                  description: Updated exact value for the condition (optional)
                unit:
                  type: string
                  description: Updated unit of the value (optional)
              required:
                - conditionId
      responses:
        '200':
          description: Condition updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing required fields or validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Condition not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      summary: Delete a condition
      tags:
        - Conditions
      description: Delete a condition for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conditionId:
                  type: string
                  description: ID of the condition to delete
              required:
                - conditionId
      responses:
        '200':
          description: Condition deleted successfully
        '400':
          description: Missing required fields
        '401':
          description: Unauthorized (JWT token missing or invalid)
        '404':
          description: Condition not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
        expiryDate:
          type: string
          format: date-time

    User:
      type: object
      properties:
        userId:
          type: string
          description: MongoDB shard key (userId)
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
          description: Optional phone number
        authToken:
          $ref: '#/components/schemas/AuthToken'
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'

    Device:
      type: object
      properties:
        deviceId:
          type: string
          description: Unique identifier for the device
        deviceName:
          type: string
          description: Name of the device
        sensorType:
          type: string
          description: Type of sensor (e.g., Temperature, Humidity)
        location:
          type: object
          properties:
            name:
              type: string
              description: Name of the location
            longitude:
              type: string
              description: Longitude of the location
            latitude:
              type: string
              description: Latitude of the location
        registrationDate:
          type: string
          format: date-time
          description: Date and time when the device was registered
        telemetryData:
          type: array
          items:
            type: object
            description: Telemetry data associated with the device

    Telemetry:
      type: object
      properties:
        eventId:
          type: string
          description: Unique identifier for the telemetry event
        deviceId:
          type: string
          description: Unique identifier for the device
        event_date:
          type: string
          format: date-time
          description: Date and time of the telemetry event
        values:
          type: array
          description: List of telemetry values
          items:
            type: object
            properties:
              valueType:
                type: string
                description: Type of the value (e.g., Temperature, Humidity)
              value:
                type: number
                description: Value of the telemetry data
        image:
          type: string
          description: URL of the associated image (if any)

  SasAccessInfo:
    type: object
    properties:
      sasUrl:
        type: string
        description: |
            A time-limited secure URL (SAS token) for accessing the resized image without making the blob container public.
            This link usually expires after 1 hour and is auto-generated for the user after image resizing.
